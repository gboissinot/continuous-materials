defaultTasks "clean", "build"

project.ext {
    mavenCoreVersion = '2.1.0'
    mongoJavaDriverVerison = '2.11.3'
    jongoVersion = '1.0'
    jacksonVersion = '2.2.3'
    gsonVersion = '2.2.4'
    log4jVersion = '1.2.7'
    slf4jVersion = '1.7.6'
    junitVersion = '4.11'
    fongoVersion = '1.3.2'
    xmlunitVersion = '1.3'
    mockitoVersion = '1.9.5'
    vertxVersion = '2.1RC3'
    utils4jVersion = '0.7.0'
    commonsLangVersion = '2.6'
    commonsIoVersion = '2.4'
}

subprojects {

    apply plugin: 'java'

    group = 'fr.synchrotron.soleil.ica.ci.lib'
    version = '1.0.0'

    sourceCompatibility = 1.7
    targetCompatibility = 1.7
    repositories {
        mavenCentral()
        maven {
            url "http://dl.bintray.com/synchrotron-soleil-ica/ci-artifacts"
        }
    }

    dependencies {
        testCompile "junit:junit:$junitVersion"
    }
}

configure(subprojects.findAll { it.name.startsWith('Services/Service') }) {
    apply from: "$rootDir/vertx.gradle"

    apply plugin: 'maven-publish'

    dependencies {
        compile "io.vertx:vertx-core:$vertxVersion"
        compile "io.vertx:vertx-platform:$vertxVersion"
        compile project(':Libs/LibVertxUtilities')
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId modname
                pom.withXml {
                    asNode().appendNode('description', 'A demonstration of maven POM customization')
                }
                artifact(modZip)
            }
        }
    }

    build.dependsOn fatJar
}


project(':Libs/LibMongoDomainObjects') {
    dependencies {
        compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
        compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    }
}

project(':Libs/LibMongoUtilities') {
    dependencies {
        compile "org.mongodb:mongo-java-driver:$mongoJavaDriverVerison"
    }
}

project(':Libs/LibMongoRepository') {
    dependencies {
        compile project(':Libs/LibMongoDomainObjects')
        compile project(':Libs/LibMongoUtilities')

        compile "org.mongodb:mongo-java-driver:$mongoJavaDriverVerison",
                "org.jongo:jongo:$jongoVersion"
    }
}

project(':Libs/LibMongoPomImporter') {
    dependencies {
        compile project(':Libs/LibMongoDomainObjects')
        compile project(':Libs/LibMongoUtilities')
        compile project(':Libs/LibMongoRepository')
        compile "commons-lang:commons-lang:$commonsLangVersion"
        compile "commons-io:commons-io:$commonsIoVersion"
        compile("org.apache.maven:maven-core:$mavenCoreVersion") {
            exclude group: "org.slf4j"
        }
        compile "org.mongodb:mongo-java-driver:$mongoJavaDriverVerison",
                "org.jongo:jongo:$jongoVersion",
                "log4j:log4j:$log4jVersion",
                "org.slf4j:slf4j-api:$slf4jVersion",
                "org.slf4j:slf4j-log4j12:$slf4jVersion"
        testCompile "com.github.fakemongo:fongo:$fongoVersion"
        testCompile "com.google.code.gson:gson:$gsonVersion"

    }
}

project(':Libs/LibMongoPomExporter') {
    dependencies {
        compile project(':Libs/LibMongoDomainObjects')
        compile project(':Libs/LibMongoUtilities')
        compile project(':Libs/LibMongoRepository')
        compile("org.apache.maven:maven-core:$mavenCoreVersion") {
            exclude group: "org.slf4j"
        }
        compile "org.mongodb:mongo-java-driver:$mongoJavaDriverVerison"
        compile "org.slf4j:slf4j-log4j12:$slf4jVersion"
        compile "org.slf4j:jul-to-slf4j:$slf4jVersion"
        compile "org.jongo:jongo:$jongoVersion"
        compile "commons-lang:commons-lang:$commonsLangVersion"

        testCompile project(':Libs/LibMongoPomImporter')
        testCompile "commons-io:commons-io:$commonsIoVersion"
        testCompile "xmlunit:xmlunit:$xmlunitVersion"
        testCompile "com.github.fakemongo:fongo:$fongoVersion"
        testCompile "com.google.code.gson:gson:$gsonVersion"
    }
}

project(':Libs/LibMongoLatestVersionResolver') {
    dependencies {
        compile project(':Libs/LibWorkflow')
        compile project(':Libs/LibMongoUtilities')
        compile "org.mongodb:mongo-java-driver:$mongoJavaDriverVerison"
        testCompile "com.github.fakemongo:fongo:$fongoVersion"
        testCompile "org.slf4j:slf4j-log4j12:$slf4jVersion"
        testCompile "org.slf4j:jul-to-slf4j:$slf4jVersion"
        testCompile "org.jongo:jongo:$jongoVersion"
        testCompile "commons-io:commons-io:$commonsIoVersion"
        testCompile "junit:junit:$junitVersion"
        testCompile "org.mockito:mockito-all:$mockitoVersion"
    }
}

project(':Libs/LibMongoJenkinsJobsGenerator') {
    dependencies {
        compile project(':Libs/LibMongoDomainObjects')
        compile project(':Libs/LibMongoUtilities')
        compile project(':Libs/LibMongoRepository')
        compile "org.mongodb:mongo-java-driver:2.11.3"
        compile "commons-lang:commons-lang:2.6"
        compile "commons-io:commons-io:2.4"
        compile "ch.qos.logback:logback-classic:1.1.1"
        compile "org.jongo:jongo:$jongoVersion"
        compile "com.github.spullara.mustache.java:compiler:0.8.10"
        compile "com.google.guava:guava:11.0-rc1"
        testCompile "junit:junit:$junitVersion"
    }
}

project(':Libs/LibVertxUtilities') {
    dependencies {
        compile "io.vertx:vertx-core:$vertxVersion"
        compile "io.vertx:vertx-platform:$vertxVersion"
        compile project(':Libs/LibMongoUtilities')
    }
}

project(':Services/ServiceLegacyMavenRepoProxy') {
    dependencies {
        compile project(':Libs/LibMongoLatestVersionResolver')
        compile project(':Libs/LibMongoPomImporter')
        compile "org.apache.maven:maven-core:$mavenCoreVersion"
        compile "org.fuin:utils4j:$utils4jVersion"
        compile "commons-io:commons-io:$commonsIoVersion"
        compile "org.slf4j:slf4j-log4j12:$slf4jVersion"
    }
}

project(':Services/ServiceDORMServer') {
    dependencies {
        compile project(':Libs/LibMongoPomImporter')
        compile project(':Libs/LibMongoPomExporter')
    }
}

project(':Applications/ApplicationMavenRepoImporter'){
    dependencies {
        compile project(':Libs/LibMongoDomainObjects')
    }
}

project(':Services/ServiceDORMManagement'){
    dependencies {
        compile project(':Libs/LibMongoRepository')
    }
}

project(':Services/ServiceDORMManagementSolution'){
    dependencies {
        compile project(':Libs/LibMongoRepository')
    }
}
